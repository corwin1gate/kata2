# Set the pipeline name.
name: Continuous Integration

# Set pipeline execution criteria.
on:
  push

# Define all jobs within the pipeline.
jobs:
  # Define the test job.
  formatting:
    name: formatting
    runs-on: ubuntu-latest
    steps:

      # Install Python.
      - name: python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      # Install Python dependencies.
      - name: pip
        run: python -m pip install black

      # Download the source code.
      - name: clone
        uses: actions/checkout@v4

      # Conduct a QA test.
      - name: black
        run: black --diff --color --check .

  linting:
    name: linting
    runs-on: ubuntu-latest
    steps:

      # Install Python.
      - name: python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      # Install Python dependencies.
      - name: pip
        run: python -m pip install pylint

      # Download the source code.
      - name: clone
        uses: actions/checkout@v4

      # Conduct a static linting.
      - name: pylint
        run: pylint --ignore=tests .

  # Define the unittest job.
  unittests:
    name: unittests
    runs-on: ubuntu-latest
    steps:

      # Install Python.
      - name: python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      # Download the source code.
      - name: clone
        uses: actions/checkout@v4

      # Conduct a QA test.
      - name: unittests
        run: python -m unittest

  # Define the pre-build-scan job.
  pre-build-scan:
    name: pre-build-scan
    needs: 
      - formatting
      - linting
      - unittests
    runs-on: ubuntu-latest
    container:
      image: semgrep/semgrep

    steps:
      # Download the source code.
      - name: clone
        uses: actions/checkout@v4
      
      # Conduct a SAST scan.
      - name: semgrep
        run: semgrep scan --config auto